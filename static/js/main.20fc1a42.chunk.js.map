{"version":3,"sources":["utilLib.js","lib.js","App.js","index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","isWithin","topLeft","bottomRight","position","isGreaterOrEqual","element1","element2","require","possibleCombinations","generateValidNeighbours","grid","currPosition","currentPosition","map","delta","filter","length","checkValidPosition","checkNeighbourState","_validNeighbours$redu","reduce","neighbour","push","checkState","Object","defineProperty","checkNextState","neighbours","currentState","updateGrid","oldGrid","x","slice","c","nextState","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","height","width","state","initCells","timer","canClick","Array","fill","cell","rowIndex","cellIndex","id","_className","react_default","a","createElement","className","row","_this2","createCell","event","_this3","target","setState","Math","floor","every","_this4","setInterval","isAllDead","stop","stopInterval","clearInterval","_this5","_this6","clickHandler","handleClick","bind","onClick","createRow","start","reset","printBoard","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.20fc1a42.chunk.js","sourcesContent":["const isWithin = function (topLeft, bottomRight, position) {\n  return isGreaterOrEqual(position[0], topLeft[0]) &&\n    isGreaterOrEqual(bottomRight[0], position[0]) &&\n    isGreaterOrEqual(position[1], topLeft[1]) &&\n    isGreaterOrEqual(bottomRight[1], position[1]);\n}\n\nconst isGreaterOrEqual = function (element1, element2) {\n  return element1 >= element2;\n}\n\nexport { isWithin };\n","const ALIVE = 1;\nconst DEAD = 0;\n\nconst {\n  isWithin\n} = require('./utilLib.js');\n\nconst possibleCombinations = [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 1], [1, -1], [1, 0], [1, 1]];\n\nconst generateAddCoordinates = function (currentPosition) {\n  return function (delta) {\n    let rowIndex = currentPosition[0] + delta[0];\n    let columnIndex = currentPosition[1] + delta[1];\n    return [rowIndex, columnIndex];\n  }\n}\n\nconst checkValidPosition = function (grid) {\n  return function (position) {\n    let topLeft = [0, 0];\n    let bottomRight = [grid.length - 1, grid[0].length - 1];\n    return isWithin(topLeft, bottomRight, position);\n  }\n}\n\nconst generateValidNeighbours = function (grid, currPosition) {\n  let possibleNeighbours = possibleCombinations.map(generateAddCoordinates(currPosition));\n  return possibleNeighbours.filter(checkValidPosition(grid));\n}\n\nconst checkState = function (grid) {\n  return function (neighbour, position) {\n    let state = grid[position[0]][position[1]];\n    neighbour[state].push(position);\n    return neighbour;\n  }\n}\n\nconst checkNeighbourState = function (grid, position) {\n  let validNeighbours = generateValidNeighbours(grid, position);\n  return validNeighbours.reduce(checkState(grid), { [ALIVE]: [], [DEAD]: [] });\n}\n\nconst checkNextState = function (neighbours, currentState) {\n  let aliveNeighbours = neighbours[ALIVE].length;\n  let cellRules = [0, 0, currentState, 1, 0, 0, 0, 0, 0];\n  return cellRules[aliveNeighbours];\n}\n\nconst updateGrid = function (oldGrid) {\n  let grid = oldGrid.map(x => x.slice());\n  for (let r = 0; r < oldGrid.length; r++) {\n    for (let c = 0; c < oldGrid[r].length; c++) {\n      let neighbours = checkNeighbourState(oldGrid, [r, c]);\n      let nextState = checkNextState(neighbours, oldGrid[r][c]);\n      grid[r][c] = nextState;\n    }\n  }\n  return grid;\n}\n\nexport default updateGrid;","import React, { Component } from 'react';\nimport updateGrid from './lib.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.height = 10;\n    this.width = 10;\n    this.state = { grid: this.initCells(this.height, this.width) }\n    this.timer = '';\n    this.canClick = true;\n  }\n\n  initCells(height, width) {\n    let cells = new Array(height).fill(width);\n    return cells.map(x => new Array(x).fill(0));\n  }\n\n  createCell(cell, rowIndex, cellIndex) {\n    const id = rowIndex * this.height + cellIndex;\n    let _className = null;\n    if (cell) _className = \"filled\";\n    return <td id={id} className={_className}></td>\n  }\n\n  createRow(row, rowIndex) {\n    return <tr>{row.map((cell, cellIndex) => this.createCell(cell, rowIndex, cellIndex))}</tr>\n  }\n\n\n  handleClick(event) {\n    let id = event.target.id;\n    if (!id) return;\n    id = +id;\n    this.setState(state => {\n      let { grid } = state;\n      const rowIndex = Math.floor(id / this.height);\n      const cellIndex = id - rowIndex * this.height;\n      grid[rowIndex][cellIndex] = 1 - grid[rowIndex][cellIndex];\n      return { grid };\n    })\n  }\n\n  isAllDead() {\n    let { grid } = this.state;\n    return grid.every(row => row.every(cell => cell === 0));\n  }\n\n  start() {\n    if (this.timer) return;\n    this.canClick = false;\n    this.timer = setInterval(() => {\n      if (this.isAllDead()) return this.stop();\n      this.setState(state => {\n        let { grid } = state;\n        grid = updateGrid(grid);\n        return { grid };\n      })\n    }, 1000)\n  }\n\n  stop() {\n    this.stopInterval();\n    this.setState(state => state);\n  }\n\n  stopInterval() {\n    this.canClick = true;\n    clearInterval(this.timer)\n    this.timer = '';\n  }\n\n  reset() {\n    this.stopInterval()\n    this.setState(state => {\n      state.grid = this.initCells(this.height, this.width);\n      return state;\n    })\n  }\n  printBoard(grid) {\n    let clickHandler = '';\n    if (this.canClick) clickHandler = this.handleClick.bind(this);\n    return <div className=\"main\">\n      <h1>Game Of Life</h1>\n      <table onClick={clickHandler}>\n        <tbody>{grid.map((row, rowIndex) => this.createRow(row, rowIndex))}</tbody>\n      </table>\n      <div className=\"buttonDiv\">\n        <button onClick={this.start.bind(this)}>Start</button>\n        <button onClick={this.stop.bind(this)}>Stop</button>\n        <button onClick={this.reset.bind(this)}>Reset</button>\n      </div>\n    </div>;\n  }\n\n  render() {\n    return this.printBoard(this.state.grid);\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}